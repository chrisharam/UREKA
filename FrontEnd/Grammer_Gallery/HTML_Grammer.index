-----------------HTML 문법------------------

-정의
: <!DOCTYPE html> <-- html 바깥에 존재해야 함.

-기본 구성
1. head
: 문서의 설명 정보 
    title 사용가능
2. body
: 화면에 표시되는 정보
    --> ul, ol등은 위치할 수 없음
3. paragraph
    <p> 내용 요소 혹은 큰 정보 덩어리/p>
4. 구분선
    <hr>
5. p태그와 다른 pre 태그
    <pre> 텍스트 </pre>
    : 이 사이에 정의된 텍스트의 공백 줄바꿈은 모두 유지되고, 글꼴과 크기도 유지됨.
6. 블록 태그
 : 해당 내용이 속한 줄을 모두 블록 처리(줄을 다른 것들과 공유하지 않음)
 <div> </div> & <p> </p>
 7. 인라인 태그
 : 새 줄에서 시작하지 않고, 필요한 부분만 차지
8. container 역할(다른 것을 붙여내는 역할) == 인라인.
: <span> </span>

-리스트
3. ol
: ordered list(순서 표시)
4. ul
: unordered list(순서 미표시)
5. li
: list item(리스트 안의 요소들 정의)
6. dl
: 설명 목록 
7. dt
: 태그 용어 
8. dd
: 태그 용어 설명

-링크
6. 링크 걸어두기
: <href="링크">
6-1. 링크 누를 시 새로운 창.
: <href ="링크" target="_blank">

-글씨체
7. header 강조  <-- 제목임을 암시// body 안에 존재.
: <h1> 글씨 </h1>
8. Bold체 글씨(강조)
: <a> 텍스트 </a>

-태그
<nav> </nav>
: 안쪽에 있는 부분이 탐색을 하는 부분
<article> </article>
: 본문임을 암시
<pre> </pre>
: 중간의 텍스트의 줄간격 공백을 유지

-레이아웃
<header>- 문서 또는 섹션의 헤더를 정의합니다.
<nav>- 탐색 링크 세트를 정의합니다.
<section>- 문서의 섹션을 정의합니다.
<article>- 독립적이고 자체 포함되는 콘텐츠를 정의합니다.
<aside>- 콘텐츠 외의 콘텐츠(사이드바 등)를 정의합니다.
<footer>- 문서 또는 섹션의 바닥글을 정의합니다.
<details>- 사용자가 필요에 따라 열고 닫을 수 있는 추가 세부 정보를 정의합니다.
<summary><details>- 요소 에 대한 제목을 정의합니다.

-이미지 url 활용하기
<img src="url을 입력하기">
--> float(두 개의 컨텐츠가 나란히 배치하기) : left
--> alt="텍스트" (이미지가 없을 때의 대체 텍스트)

-반응형(디바이스 별 레이아웃 설정)
<meta name="viewport" content="width=device-width, initial-scale=1.0">
header에 설정하기!

-url 보기
개발자 도구 - 네트워크 - 상태
: 200(정상/새 데이터 내려줌)
: 404(비정상/요청 자원 없음)
: 304(정상/바뀐 게 없으니 캐리 사용해라)

-보안 ***최근 해킹 사건이 일어났기에, 면접 때 해당 내용을 공부했다를 어필하기***
<html lang="ko"> 으로 기술하는 것은 검색, 즉 google처럼 서칭머신을 위함
--> 보안에 취약할 수 있음. 언어 설정을 하지 않아도 무방하게 작동함.

url = ip:port/survelt/memberinsert? id = a & pw = b
              구조 기술  정보 노출
-보안 로그인
form태그 사용 --> form 안에 들어간 값들이 CGI로 이동함.
<form action="loginController" method="post"> 
// 포스트 방식을 사용해야, 적어도 url에는 안 보임-->그래도 개발자 모드-payload에서는 보임.
// url에 이미 로그인하겠다는(survelet에 가겠다는) 구조가 보임 = 최악.

    <div>
        ID <input name="id" type="text">    
    </div>
    <div>
        PW <input name="pw" type="text">
    </div>
        <input type="submit" value="Login">
    </form>

php파일 사용

Chrome을 기준으로, 웹 UI를 보며 수정하기
--> 우클릭 - 요소보기 - 수정

-Semantic 하게 작성하는 html
--> 결국 검색 엔진에 도움을 주기 위함.

<< 보안 전문가로서의 프론트엔드 전문가 >>
코더는 결국 나중에 AI로 많이 대체될 텐데, 나는 어떤 경쟁력을 갖출 것인가?
--> 보안 전문가! 프론트 엔드에서 선제적인 조치를 취할 수 있는 프레임워크 & url을 통한 보안성 강화
--> 예쁘게 하는 것은 디자이너, 나는 '프론트엔드 디벨로퍼'