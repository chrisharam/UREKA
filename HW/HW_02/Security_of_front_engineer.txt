                    프론트엔드 개발자가 보안성을 다루는 법
-----------------------------------------------------------------------                    
W3Schools "html" url
https://www.w3schools.com/html/default.asp
-----------------------------------------------------------------------                    
                    << url에도 정보는 담겨있다 >>
1. 웹에서 url을 점검사항
개발자 도구 - 네트워크 - 상태
: 200(정상/새 데이터 내려줌)
: 404(비정상/요청 자원 없음)
: 304(정상/바뀐 게 없으니 캐리 사용해라)

2. language 설정
<html lang="ko"> 으로 기술하는 것은 검색, 즉 google처럼 서칭머신을 위함
--> 보안에 취약할 수 있음. 언어 설정을 하지 않아도 무방하게 작동함.

3. 보안성이 취약한 url 예시
url = ip:port/survelt/memberinsert? id = a & pw = b
              구조 기술  정보 노출

4. 단순화된 보안 로그인
form태그 사용 --> form 안에 들어간 값들이 CGI로 이동함.
<form action="loginController" method="post"> 
// 포스트 방식을 사용해야, 적어도 url에는 안 보임-->그래도 개발자 모드-payload에서는 보임.
// url에 이미 로그인하겠다는(survelet에 가겠다는) 구조가 보임 = 최악.

    <div>
        ID <input name="id" type="text">    
    </div>
    <div>
        PW <input name="pw" type="text">
    </div>
        <input type="submit" value="Login">
    </form>
-----------------------------------------------------------------------                    
-----------------------------------------------------------------------                    
                        느낀점 및 관심분야
1. url을 통한 보안성 점검
php파일을 사용하여 사용자의 로그인 처리를 수행하면, 보안성이 취득된다고 생각했었다.
그러나 오늘 수업을 듣고 난 후,
url을 통해 보안성을 점검하는 시간을 가지며
php 파일을 사용한다는 정보만으로도 보안정보가 노출될 수 있다는 것을 깨닳았다.

2. 보안 전문가로서의 프론트엔드 엔지니어
Ai와 빅데이터, 그리고 딥러닝의 시대에서 점점 코더의 자리는 줄어든다.
코더는 결국 AI로 대체되는 현상황에서, 나는 어떤 경쟁력을 갖출 것인가?
오늘 수업을 듣고 난 후 내가 가졌던 진로고민에 하나의 숨통이 트인 부분이 있었다.
보안 전문가로서의 프론트 엔지니어.
프론트엔드는 UI만 예쁘게 디자인하는 디자이너라는 생각이 이전에 지배적이었다.
하지만, 해킹 등의 데이터 보안문제에서 프론트엔드에서의 정보처리는
가장 선제적인 조치를 취할 수 있는 포지션이자, 최선두에서 감지하며 방어할 수 있는 영역이라고 생각한다.
그만큼 처리하기 까다롭고 탐지하기 힘들겠지만,
앞으로 더 공부하고 노력하여 이 분야의 전문가가 되기 위해 노력해야 겠다는 생각이 들었다.
